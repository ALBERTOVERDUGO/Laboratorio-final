name: Workflow
on:
  push:
    branches:
      - feature-Alberto-Verdugo-Ponce-Laboratorio-Final

jobs:        
  SAST:
    runs-on: ubuntu-latest
    steps:

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'


    
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'  # Ajusta la versión de Node.js según tus necesidades

    - name: Install dependencies
      run: npm install  # O usa `yarn install` si prefieres yarn

    - name: SonarCloud Scan
      run: |
        npm install -g sonarqube-scanner 
        sonar-scanner \
          -Dsonar.projectKey=ALBERTOVERDUGO_Laboratorio-final \
          -Dsonar.organization=albertoverdugo \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.branch.name=feature-Alberto-Verdugo-Ponce-Laboratorio-Final

#SCA -------------------------------------------

  SCA:
    needs: SAST
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v2      

    - name: Build
      id: build
      run: |
             pwd
             ls -R
             if [ -f "package.json" ]; then
                echo "Utiliza package.json, proyecto Node.js o React"
                echo "Instalando dependencias"
                npm install
                 if grep -q '"react-scripts"' package.json; then
                    echo "Construyendo proyecto React"
                    npm run build
                 else
                    echo "Construyendo proyecto Node.js"
                    npm run build
                 fi
                       mkdir -p ${{ github.workspace }}/build
                       cp -r build/* ${{ github.workspace }}/build
             else
                echo "Otro tipo de proyecto"
             fi

    - name: Update Dependencies
      run: npm update


    - name: NPM Audit
      id: npmaudit
      run: |
          npm audit --json > audit-report.json
          npm install -g auditjs
          auditjs -r audit-report.json -w ${{github.workspace}}/reports/dependency-check-report.html

    - name: Upload Test result
      uses: actions/upload-artifact@v2
      with:
        name: Depcheck report
        path: ${{github.workspace}}/reports

    - name: Verify Build Output
      run: |
            ls -la ${{ github.workspace }}/build

    - name: Verify JAR existence
      run: ls -la ${{github.workspace}}/build/libs/

    - name: Upload JAR
      uses: actions/upload-artifact@v2
      with:
        name: JAR
        path: ${{github.workspace}}/build/libs/LaboratorioApp.jar

# Docker Build Image ----------------------------------------

  DockerBuild:
    needs: SCA
    runs-on: self-hosted
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Download JAR
      uses: actions/download-artifact@v2
      with:
        name: JAR
        path: ${{github.workspace}}

    - name: Build Docker
      run: |
        docker build --tag albertoverdugo/Laboratoriodevsecops-test:latest .
        
